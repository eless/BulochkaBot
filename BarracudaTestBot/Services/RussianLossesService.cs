using System.Text.Json;
using System.Reflection;
using System.Text;
using System.Globalization;

namespace BarracudaTestBot.Services;

public class Data
{
    public DateTime date { get; set; }
    public int day { get; set; }
    public string resource { get; set; }
    public Stats stats { get; set; }
    public Increase increase { get; set; }
}

public class Increase
{
    public int personnel_units { get; set; }
    public int tanks { get; set; }
    public int armoured_fighting_vehicles { get; set; }
    public int artillery_systems { get; set; }
    public int mlrs { get; set; }
    public int aa_warfare_systems { get; set; }
    public int planes { get; set; }
    public int helicopters { get; set; }
    public int vehicles_fuel_tanks { get; set; }
    public int warships_cutters { get; set; }
    public int cruise_missiles { get; set; }
    public int uav_systems { get; set; }
    public int special_military_equip { get; set; }
    public int atgm_srbm_systems { get; set; }
}

// Used https://json2csharp.com/ to generate classes from json
public class Root
{
    public string message { get; set; }
    public Data data { get; set; }
}

public class Stats
{
    public int personnel_units { get; set; }
    public int tanks { get; set; }
    public int armoured_fighting_vehicles { get; set; }
    public int artillery_systems { get; set; }
    public int mlrs { get; set; }
    public int aa_warfare_systems { get; set; }
    public int planes { get; set; }
    public int helicopters { get; set; }
    public int vehicles_fuel_tanks { get; set; }
    public int warships_cutters { get; set; }
    public int cruise_missiles { get; set; }
    public int uav_systems { get; set; }
    public int special_military_equip { get; set; }
    public int atgm_srbm_systems { get; set; }
}

public class RussianLossesService
{
    private const int GOOD_RUSSIANS_COUNT_LIMIT_1 = 500;
    private const int GOOD_RUSSIANS_COUNT_LIMIT_2 = 750;
    private const int GOOD_RUSSIANS_COUNT_LIMIT_3 = 1000;
    private const int RUSSIAN_TANKS_LIMIT_1 = 20;

    public async Task<(string, string)> GetData()
    {
        try
        {
            var sticker = string.Empty;
            var losses = await new HttpClient()
                .GetFromJsonAsync<Root>("https://russianwarship.rip/api/v1/statistics/latest");

            if (string.IsNullOrEmpty(losses!.message) || losses.message != "The data were fetched successfully.")
            {
                return (string.Empty, sticker);
            }
            var date = losses.data.date.ToString("dd/MM/yy", CultureInfo.CreateSpecificCulture("en-US"));
            var builder = new StringBuilder($"–í—Ç—Ä–∞—Ç–∏ –Ω–∞ {date}{Environment.NewLine}");

            Dictionary<string, string> statNameDictionary = new Dictionary<string, string> {
                ["personnel_units"] = "—Ä—É—Å–Ω—ñ",
                ["tanks"] = "—Å–∫—Ä—î–ø–Ω–∏—Ö —Ç–∞–Ω–∫—ñ–≤",
                ["armoured_fighting_vehicles"] = "–±—Ä–æ–Ω\\. –º–∞—à–∏–Ω",
                ["artillery_systems"] = "–∞—Ä—Ç\\. —Å–∏—Å—Ç–µ–º",
                ["mlrs"] = "–†–°–ó–í",
                ["aa_warfare_systems"] = "–∞–Ω–∞–ª–æ–≥–æ–≤–Ω—î—Ç–Ω–∏—Ö –ø–ø–æ",
                ["planes"] = "–≤—î—á–Ω–æ–ª—å–æ—Ç–Ω–∏—Ö –ª—ñ—Ç–∞–∫—ñ–≤",
                ["helicopters"] = "–≥–µ–ª—ñ–∫–æ–ø—Ç–µ—Ä—ñ–≤",
                ["vehicles_fuel_tanks"] = "–∞–≤—Ç–æ —Ç–∞ —Ü–∏—Å—Ç–µ—Ä–Ω–∏",
                ["warships_cutters"] = "–∫–æ—Ä–∞–±–ª—ñ/–∫–∞—Ç–µ—Ä–∏",
                ["cruise_missiles"] = "–∫—Ä–∏–ª–∞—Ç–∏—Ö —Ä–∞–∫–µ—Ç",
                ["uav_systems"] = "–ë–ü–õ–ê",
                ["special_military_equip"] = "—Å–ø–µ—Ü—Ç–µ—Ö–Ω—ñ–∫–∞",
                ["atgm_srbm_systems"] = "–û–¢–†–ö",
            };

            var stats = new List<string>();
            foreach (PropertyInfo stat in losses.data.stats.GetType().GetProperties()) {
                stats.Add($"{statNameDictionary[stat.Name]}: *{stat.GetValue(losses.data.stats)}*");
            }

            var increase = new List<string>();
            foreach (PropertyInfo stat in losses.data.increase.GetType().GetProperties()) {
                var change = Convert.ToInt32(stat.GetValue(losses.data.increase));
                var str = new StringBuilder();
                if (change != 0) {
                    str.Append($" \\+ \\(*{change}*\\)");
                    if (stat.Name == "personnel_units") {
                        if (change >= GOOD_RUSSIANS_COUNT_LIMIT_3) {
                            str.Append("ü§ñüí™üëä");
                        } else if (change >= GOOD_RUSSIANS_COUNT_LIMIT_2) {
                            str.Append("ü•≥üí™");
                        } else if (change >= GOOD_RUSSIANS_COUNT_LIMIT_1) {
                            str.Append("üéâ");
                        }
                    } else if (stat.Name == "tanks") {
                        if (change >= RUSSIAN_TANKS_LIMIT_1) {
                            str.Append("üí•üôâ");
                            sticker = "—Ä—É—Å–Ω—ñ –ø–∏–∑–¥–∞";
                        }
                    }
                }
                increase.Add(str.ToString());
            }

            for (int i = 0; i < stats.Count(); i++) {
                builder.Append(stats[i]);
                builder.Append(increase[i]);
                builder.AppendLine();
            }
            return (builder.ToString(), sticker);
        }
        catch (HttpRequestException hre)
        {
            Console.WriteLine(hre);
            return (string.Empty, string.Empty);
        }
    }
}